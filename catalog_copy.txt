Catalog Year: 2020-2021
Computer Science

Computer Science encompasses the systematic study of computing systems and computation. It is continually evolving and expanding, making it an exciting field of study. All of the traditional areas in computer science as well as newer directions are represented in our faculty's expertise (including algorithms, programming languages, data structures, artificial intelligence, human-computer interaction, databases, computer architecture, networks, security, vision, graphics, parallel computing, robotics, bioinformatics, Web information retrieval, multimedia), allowing us to offer a large variety of courses and substantial research opportunities for students.
 
For advice on making a choice about an introductory Computer Science course, consult "Choosing an Introductory CS Course" online at www.wellesley.edu/cs/curriculum/introductory.


Computer Science Major
Goals for the Computer Science Major
The aim of our program for the major is to enable students to engage in a world shaped by computation and data, including a solid preparation for graduate work and a successful career in computer science or a related discipline. To achieve this success, computer science majors upon graduation will be able to:
Demonstrate competency in foundational areas of computer science, encompassing its theoretical basis, software methodologies, computer hardware, and applications
Formulate, analyze, and solve computational problems
Apply computational thinking to new problems and adapt to new technologies
Communicate technical material, orally and in writing, including operating in a team-based setting and solving problems collaboratively
Evaluate the role of computer science in society and draw connections between computer science and other disciplines
Requirements for the Computer Science Major
Students majoring in computer science must complete CS 111, CS 230, CS 231, CS 235, CS 240, CS 251, two 300-level CS courses, and at least one additional CS course at the 200 or 300 level. Independent study courses (CS 250, CS 250H, CS 350, CS 350H) and honors courses (CS 360, CS 370) do not count toward the required courses for the major. Students who do not take CS 111 must replace this requirement with an additional one-unit CS course at the 200 or 300 level. Computer science courses at other institutions used to meet the nine-course requirement must be approved in advance by the department chair on an individual basis. In addition, all majors in computer science are expected to complete (1) MATH 225 (Combinatorics and Graph Theory) and (2) at least one additional course in mathematics at the 200 or 300 level. Students may use CS 230 as their prereq for MATH 225. Particularly relevant mathematics courses are MATH 206 (Linear Algebra), STAT 218 (Intro to Statistics), STAT 220 (Probability), MATH 221 (Statistical Inference), MATH 223 (Number Theory), MATH 305 (Abstract Algebra), MATH 309 (Foundations of Mathematics), and MATH 325 (Graph Theory). The MATH and STAT courses are considered prerequisites for the CS degree and could be counted toward another major. Students should consult a computer science faculty member for advice in choosing mathematics courses best suited to their interests. Students are encouraged to consult the department's website (www.wellesley.edu/cs) for suggestions of possible course schedules for completing the major. Students considering a junior year abroad should consult a faculty member in the department as soon as possible in their sophomore year to plan a schedule of courses to complete the major.
 
All computer science majors are required to participate in the Computer Science Senior Poster Fair in the spring of their senior year, in which students present posters on a topic of interest related to computer science (see https://www.wellesley.edu/cs/curriculum/senior for past topics). Students who are graduating early should contact the department chair about alternative ways to satisfy this requirement.
Honors in Computer Science
Students can earn honors in computer science by successfully completing an honors-quality senior thesis. A detailed description of the senior thesis project in computer science can be found at the department's website (www.wellesley.edu/cs/research/thesis). Majors who are interested in undertaking a senior thesis project are urged to discuss their plans with either their advisor or the department chair as early as possible in their junior year.
Graduate Study in Computer Science
Students who plan to pursue graduate work in computer science are strongly encouraged to develop their background in mathematics, particularly in the areas of linear algebra, logic, probability and statistics, number theory, and graph theory. In addition, students who are planning either graduate work or advanced technical research or development work are strongly encouraged to pursue at least one independent study or research project before graduating, in the form of a Wellesley course (CS 250, CS 350, CS 360), an MIT UROP, or a summer internship. Consult www.wellesley.edu/cs/research for more details.
Advanced Placement Policy in Computer Science
Students may receive a maximum of one unit of college credit for a score of 5 on the Computer Science Advanced Placement exam. This unit does not count toward the computer science major or minor. Students receiving AP credit for computer science should consult with the department regarding enrollment in CS 230 or CS 240. Computer science majors and minors should consult with a computer science faculty advisor before electing to take a computer science course as credit/noncredit.
Computer Engineering
Students interested in computer engineering should consult the course listings in Extradepartmental and enroll in ENGR 111, ENGR 120, or ENGR 160. These courses are intended to be a gateway experience for possible subsequent engineering studies, such as the engineering certificates from the Olin College of Engineering. The Special Academic Programs section contains a description of these certificates that represent groups of engineering courses at Olin designed to complement a major at Wellesley. More information can be found at www.wellesley.edu/engineering.
Interdepartmental Majors
Students interested in an interdepartmental major in Cognitive and Linguistic Sciences, Media Arts and Sciences, or Neuroscience are referred to these listings in the catalog.
Students interested in engineering should consult the course listings in Extradepartmental.

Computer Science Minor
Requirements for the Computer Science Minor
The computer science five-course minimum minor is recommended for students whose primary interests lie elsewhere, but who wish to obtain a fundamental understanding of computer science. The minor consists of CS 111, CS 230, one of CS 231, CS 235, or CS 240, at least one CS course above the 100 level, and at least one 300-level CS course. Independent study courses (CS 250, CS 250H, CS 350, CS 350H) do not count toward the required courses for the minor. Students who do not take CS 111 must replace this requirement with one additional one-unit CS course at the 200 or 300 level. 
 

CS Courses
Course ID: CS111  Title: Computer Programming and Problem Solving
An introduction to problem solving through computer programming. Students learn how to read, modify, design, debug, and test algorithms that solve problems. Programming concepts include control structures, data structures, abstraction, recursion, modularity, and object-oriented design. Students explore these concepts in the context of interactive programs involving graphics and user interfaces using the Python programming language. Students are required to attend an additional two-hour laboratory section each week. Required for students who wish to major or minor in computer science or elect more advanced courses in the field.
Units: 1; Max Enrollment: 30; Prerequisites: Fulfillment of the basic skills component of the Quantitative Reasoning requirement. No prior background with computers is expected.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Spring; Fall; Semesters Offered this Academic Year: Fall; Spring; Notes: Does not fulfill the laboratory requirement.;

Course ID: CS112  Title: Computation for the Sciences
An introduction to computer programming that provides the tools necessary for students to use computers effectively in scientific work, including physical sciences, biological sciences, medicine, mathematics, psychology, and economics. Students learn to write software to solve problems, visualize and analyze data, perform computer simulations, and implement and test computational models that arise in a wide range of scientific disciplines. The course introduces MATLAB, an extensive and widely used technical computing environment with advanced graphics, visualization, and analysis tools, and a rich high-level programming language. Students are required to attend an additional two-hour laboratory section each week.
Units: 1; Max Enrollment: 30; Prerequisites: Fulfillment of the basic skills component of the Quantitative Reasoning requirement. No prior background with computers is expected.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Spring; Semesters Offered this Academic Year: Spring; Notes: Does not fulfill the laboratory requirement.;

Course ID: CS115/MAS115  Title: Computing for the Socio-Techno Web
Technologies and services made available from Computer Science, such as online environments Facebook, Twitter, and Wikipedia, are integral in today's world. Many problems exist in our real world that transfer to and get amplified in the virtual world created by highly interconnected and ubiquitous computing. What are the basic technologies that enable all this innovation? How do these new environments affect our lives? This course aims to answer these questions through investigation of the socio-techno web. On the technical side we study three languages: HTML5, CSS, and basic JavaScript. We interweave the technical with the social aspects by examining issues introduced by the use of the Social Web. In the process we learn how computers work.
Units: 1; Max Enrollment: 30; Crosslisted Courses: MAS115; Prerequisites: This course is open to Firstyears and Sophomores, others by permission.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Spring; Fall; Semesters Offered this Academic Year: Fall; Spring;
 

Course ID: CS203  Title: Computer Music
This course explores how computer code can be used to produce music by examining topics such as digital signal processing, synthesis, protocols, networking, and modeling. Students work with a computer environment called SuperCollider, an open-source software designed for real-time audio synthesis. Students complete weekly programming assignments and create music ranging from synthesizer tracks in popular songs to experimental algorithmic compositions.
Units: 1; Max Enrollment: 18; Prerequisites: CS111; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; ARS - Visual Arts, Music, Theater, Film and Video; Normally offered in alternate years; Not offered in 2020-2021

Course ID: CS204  Title: Introduction to Front-End Web Development
This course introduces modern web development using HTML, CSS and JavaScript. JavaScript is explored in detail, including scoping, closures, objects, prototype inheritance, and namespacing. The jQuery library is also introduced, and the course covers event handling and Ajax interactions. Students will build web pages using front-end templates such as bootstrap and JavaScript libraries for client-side templating. Designed web pages will be modern, responsive and accessible. The course also covers the jQuery UI (User Interface) library and its capabilities.
Units: 1; Max Enrollment: 24; Prerequisites: CS 111 or permission of the instructor.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Fall and Spring; Semesters Offered this Academic Year: Fall; Spring;

Course ID: CS220  Title: Human-Computer Interaction
Human-Computer Interaction is one of the areas that have transformed the way we use computers in the last 30 years. Topics include methodology for designing and testing user interfaces, interaction styles (command line, menus, graphical user interfaces, virtual reality, tangible user interfaces), interaction techniques (including the use of voice, gesture, eye movements), design guidelines, and user interface software tools. Students will design a user interface, program a prototype, and test the results for usability.
Units: 1; Max Enrollment: 18; Prerequisites: One of CS 111, CS 112, CS/MAS 115; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Spring; Fall; Semesters Offered this Academic Year: Fall; Spring;

Course ID: CS230  Title: Data Structures
An introduction to techniques and building blocks for organizing large programs. Topics include: modules, abstract data types, recursion, algorithmic efficiency, and the use and implementation of standard data structures and algorithms, such as lists, trees, graphs, stacks, queues, priority queues, tables, sorting, and searching. Students become familiar with these concepts through weekly programming assignments using the Java programming language. Students are required to attend an additional two-hour laboratory section each week.
Units: 1; Max Enrollment: 24; Prerequisites: CS 111 and permission of the instructor.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Spring; Fall; Semesters Offered this Academic Year: Fall; Spring; Notes: Does not fulfill the laboratory requirement.;

Course ID: CS231  Title: Fundamental Algorithms
An introduction to the design and analysis of fundamental algorithms. General techniques covered: divide-and-conquer algorithms, dynamic programming, greediness, probabilistic algorithms. Topics include: sorting, searching, graph algorithms, compression, cryptography, computational geometry, and NP-completeness.
Units: 1; Max Enrollment: 24; Prerequisites: CS 230 and either MATH 225 or permission of the instructor.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Spring; Fall; Semesters Offered this Academic Year: Fall; Spring;

Course ID: CS232  Title: Artificial Intelligence
What is artificial intelligence (AI) and should humans fear it as one of "our biggest existential threats"? In this course we will grapple with these difficult questions and investigate them in different ways. We will follow the history of AI from Alan Turing's "Can Machines Think?" seminal paper to the recent Elon Musk musings on AI's threat to mankind. We will discuss the underlying theory of the symbolic, knowledge-rich approaches of the 20th century AI (e.g., rule-based systems) and the 21st century approaches relying on statistical learning from large amounts of data (e.g., machine learning algorithms). Finally, we will dissect some of the AI applications in modern life: personal assistant technology like Alexa and Siri, machine translation (Google Translate), and self-autonomous cars. By the end of the semester, students should be able to answer the starting questions in depth and with nuance.
Units: 1; Max Enrollment: 18; Prerequisites: CS 230 or permission of the instructor.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Spring; Semesters Offered this Academic Year: Spring; Notes: Normally offered in alternate years;

Course ID: CS234  Title: Data, Analytics, and Visualization
As the number of our digital traces continues to grow, so does the opportunity for discovering meaningful patterns in these traces. In this course, students will initially learn how to collect, clean, format, and store data from digital platforms. By adopting a computational approach to statistical analysis, students will then implement in code different statistical metrics and simulation scenarios for hypothesis testing and estimation. Finally, students will generate meaningful visualizations for data exploration and communicating results. Additionally, we will discuss the ethics of data collection and think critically about current practices of experimenting with online users. Students will work in groups to create their own datasets, ask an interesting question, perform statistical analyses and visualizations, and report the results.
Units: 1; Max Enrollment: 18; Prerequisites: CS 230 or permission of the instructor.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Degree Requirements: QRF - Quantitative Reasoning - Overlay; Typical Periods Offered: Every other year; Semesters Offered this Academic Year: Fall; Notes: Ann E. Maurer '51 Speaking Intensive Course.;

Course ID: CS235  Title: Theory of Computation
This course offers an introduction to the theory of computation. Topics include languages, regular expressions, finite automata, grammars, pushdown automata, and Turing machines. The first part of the course covers the Chomsky hierarchy of languages and their associated computational models. The second part of the course focuses on decidability issues and unsolvable problems. The final part of the course investigates complexity theory.
Units: 1; Max Enrollment: 24; Prerequisites: CS 230 and either MATH 225 or permission of the instructor.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Spring; Fall; Semesters Offered this Academic Year: Fall; Spring;

Course ID: CS240  Title: Foundations of Computer Systems with Laboratory
This course examines how computers run programs, introducing key software and hardware abstractions and implementations between programming languages and transistors. The course traces representation and translation of data and programs through three broad topics in computer systems: computer hardware implementation, including digital logic, computer arithmetic, and machine organization; the hardware-software interface, including instruction set architecture, assembly code, and the C programming language; and abstractions for practical systems, including the physical memory hierarchy, the operating system process model, virtual memory, and memory management. Students complete extensive hands-on projects in hardware and software systems. Students are required to attend one three-hour laboratory weekly.
Units: 1.25; Max Enrollment: 24; Prerequisites: CS230 or permission of the instructor.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; LAB - Natural and Physical Sciences Laboratory; Typical Periods Offered: Spring; Fall; Semesters Offered this Academic Year: Spring; Fall; Notes: This course does satisfy the laboratory requirement.;

Course ID: CS242  Title: Computer Networks
A systems-oriented approach to data networks, including a theoretical discussion of common networking problems and an examination of modern networks and protocols. Topics include point-to-point links, packet switching, Internet protocols, end-to-end protocols, congestion control, and security. Projects may include client-server applications and network measurement tools.
Units: 1; Max Enrollment: 24; Prerequisites: CS 230 or permission of the instructor.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Every other year; Semesters Offered this Academic Year: Fall;

Course ID: CS250  Title: Research or Individual Study
Units: 1; Max Enrollment: 25; Prerequisites: CS 230 or permission of the instructor.; Typical Periods Offered: Spring; Fall; Semesters Offered this Academic Year: Fall; Spring; Notes: Mandatory credit/noncredit.;

Course ID: CS250H  Title: Research or Individual Study
Units: 0.5; Max Enrollment: 15; Prerequisites: CS 230 or permission of the instructor.; Typical Periods Offered: Spring; Fall; Semesters Offered this Academic Year: Fall; Spring; Notes: Mandatory credit/noncredit.;

Course ID: CS251  Title: Principles of Programming Languages
This course introduces the principles underlying the design, semantics, and implementation of modern programming languages in major paradigms including function-oriented, imperative, and object-oriented. The course examines: language dimensions including syntax, naming, state, data, control, types, abstraction, modularity, and extensibility; issues in the runtime representation and implementation of programming languages; and the expression and management of parallelism and concurrency. Students explore course topics via programming exercises in several languages, including the development of programming language interpreters.
Units: 1; Max Enrollment: 24; Prerequisites: CS 230 or permission of the instructor.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Spring; Fall; Semesters Offered this Academic Year: Fall; Spring;

Course ID: CS301  Title: Compiler and Runtime System Design
This course covers principles and practice in the design and implementation of modern compilers and programming language runtime systems. Topics include lexical analysis, parsing, symbols tables, semantic analysis, type checking, intermediate representations, program analysis and optimization, code generation, garbage collection, and other runtime support. As time permits, the course may also survey topics including just-in-time compilation, runtime optimization, concurrent runtime systems, or extended automatic program error detection. Students will construct a full compiler and runtime system for a simple statically-typed programming language over the course of the semester.
Units: 1; Max Enrollment: 18; Prerequisites: CS 230 and at least one of CS 240 or CS 251. CS 235 is recommended, but not required.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Spring; Semesters Offered this Academic Year: Spring; Notes: Normally offered in alternate years;

Course ID: CS304  Title: Databases with Web Interfaces
A study of the three-layer architecture commonly used for Web-based applications such as e-commerce sites. We will learn to model and design databases using entity-relationship diagrams and the Standard Query Language (SQL) for managing databases. We will focus on Flask, a popular Python-based web micro-framework, as well as important alternatives such as Node.js. We will learn about implementing features using Ajax. We will also discuss performance, reliability, concurrency and security issues. Finally, we will create dynamic websites driven by database entries.
Units: 1; Max Enrollment: 24; Prerequisites: CS 230 or permission of the instructor.; 
Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Spring; Fall; Semesters Offered this Academic Year: Fall; Spring;

Course ID: CS305  Title: Machine Learning
Machine learning is the science of teaching computers how to learn from observations. It is ubiquitous in our interactions with society, showing up in face recognition, web search, targeted advertising, speech processing, genetic analysis, and even Facebook's selection of posts to display. It is currently at the forefront of research in artificial intelligence, and has been making rapid strides given the vast availability of data today. This course is a broad introduction to the field, covering the theoretical ideas behind widely used algorithms like support vector machines, neural networks, graphical models, decision trees, and many more. We will also study practical applications of these algorithms to problems in vision, speech, language, biology, and the social sciences.
Units: 1; Max Enrollment: 18; Prerequisites: CS 230 and either MATH 206 or MATH 220 or MATH 225.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; EC - Epistemology and Cognition; Semesters Offered this Academic Year: Not offered in 2020-2021; Fall; Notes: Mandatory credit/noncredit.;

Course ID: CS307  Title: Computer Graphics
A survey of topics in computer graphics with an emphasis on fundamental techniques. Topics include: graphics hardware, fundamentals of three-dimensional graphics including modeling, projection, coordinate transformation, synthetic camera specification, color, lighting, shading, hidden surface removal, animation, and texture-mapping. We also cover the mathematical representation and programming specification of lines, planes, curves, and surfaces. Students will build graphics applications using a browser-based platform.
Units: 1; Max Enrollment: 18; Prerequisites: CS 230 or permission of the instructor.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Fall, Spring; Semesters Offered this Academic Year: Spring;
 

Course ID: CS313  Title: Computational Biology
Many elegant computational problems arise naturally in the modern study of molecular biology. This course is an introduction to the design, implementation, and analysis of algorithms with applications in genomics. Topics include bioinformatic algorithms for dynamic programming, tree-building, clustering, hidden Markov models, expectation maximization, Gibbs sampling, and stochastic context-free grammars. Topics will be studied in the context of analyzing DNA sequences and other sources of biological data. Applications include sequence alignment, gene-finding, structure prediction, motif and pattern searches, and phylogenetic inference. Course projects will involve significant computer programming in Java. No biology background is expected.
Units: 1; Max Enrollment: 18; Prerequisites: CS 230 or permission of the instructor.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Every other year; Notes: Normally offered in alternate years; Not offered in 2020-2021

Course ID: CS315  Title: Data and Text Mining for the Web
In the past decade, we have experienced the rise of socio-technical systems used by millions of people: Google, Facebook, Twitter, Wikipedia, etc. Such systems are on the one hand computational systems, using sophisticated infrastructure and algorithms to organize huge amounts of data and text, but on the other hand social systems, because they cannot succeed without human participation. How are such systems built? What algorithms underlie their foundations? How does human behavior influence their operation and vice-versa? In this class, we will delve into answering these questions by means of: a) reading current research papers on the inner-workings of such systems; b) implementing algorithms that accomplish tasks such as web crawling, web search, random walks, learning to rank, text classification, topic modeling; and c) critically thinking about the unexamined embrace of techno-solutionism using a humanistic lens.
Units: 1; Max Enrollment: 18; Prerequisites: CS 230 or permission of the instructor.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Every other year; Semesters Offered this Academic Year: Fall; Notes: Normally offered in alternate years.;

Course ID: CS320  Title: Tangible User Interfaces
Tangible user interfaces emerge as a novel human-computer interaction style that interlinks the physical and digital worlds. Extending beyond the limitations of the computer mouse, keyboard, and monitor, tangible user interfaces allow users to take advantage of their natural spatial skills while supporting collaborative work. Students will be introduced to conceptual frameworks, the latest research, and a variety of techniques for designing and building these interfaces. Developing tangible interfaces requires creativity as well as an interdisciplinary perspective. Hence, students will work in teams to design, prototype, and physically build tangible user interfaces.
Units: 1; Max Enrollment: 18; Prerequisites: CS 215, CS 220, or CS 230, or permission of the instructor.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Fall; Semesters Offered this Academic Year: Fall.; Notes: Normally offered in alternate years; 

Course ID: CS321  Title: Extended Reality
Mixed and Augmented Reality technologies combine virtual content with the physical environment, allowing people to interact with computers and digital content in exciting new ways. These emerging human-computer interaction paradigms have been applied to a variety of fields including medicine, education, design, entertainment, and play. This course introduces fundamental methods, principles, and tools for designing, programming, and testing mixed and augmented reality applications. Topics include the history of virtual and augmented reality, application domains, hardware for 3D input and display, tracking and registration, 3D perception, and societal implications. Students will work individually and in teams to develop novel virtual and augmented reality experiences.
Units: 1; Max Enrollment: 18; Prerequisites: CS 220 or CS 230.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Spring; Semesters Offered this Academic Year: Spring;

Course ID: CS323  Title: Social Computing
Social Computing systems connect us to our closest friends, and globally to people all over the world. In recent decades, companies like Facebook, Snapchat, and even Amazon, have reshaped our social environments. All of these systems, at their core, are designed to facilitate interactions between people. What design decisions shape these systems? Students will learn the theoretical foundations of Social Computing drawn from the Social Sciences, and will learn software prototyping and design techniques to create new systems. This class will explore topics such as identity, anonymity, reputation, moderation, crowdsourcing, and social algorithms. Students will work in teams to design, prototype, and build social computing systems.
Units: 1; Max Enrollment: 18; Prerequisites: CS 220 or CS230.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Every other year; Fall; Semesters Offered this Academic Year: Not offered; Notes: Normally offered in alternate years; Not offered in 2020-2021

Course ID: CS332  Title: Visual Processing by Computer and Biological Vision Systems
This course explores methods for deriving information about the three-dimensional world from visual images and using this information for tasks such as recognizing objects and events, navigating through a dynamic scene, and communicating between social agents. We use an interdisciplinary approach that combines computer science, psychology, and neuroscience, facilitating the design of effective computer vision systems while contributing to an understanding of human visual processing and how it is carried out in the brain. Topics include edge detection, stereo vision, motion analysis, the analysis of color, object and face recognition, activity recognition, visual attention and search, recognition methods based on deep learning, and applications in medicine, security, information retrieval, and mobile robotics. The course uses vision software written in MATLAB.
Units: 1; Max Enrollment: 20; Prerequisites: CS 112 or CS 230, or permission of the instructor.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Every other year; Fall; Semesters Offered this Academic Year: Fall; Notes: Normally offered in alternate years;

Course ID: CS341  Title: Operating Systems
This course is designed to provide a solid foundation in the design and implementation of key concepts in existing operating systems. These concepts include process management, scheduling, multitasking, synchronization, deadlocks, memory management, file systems, and I/O operations. Throughout the course, the mechanism design aspects of these concepts will be discussed and assessed from the point of view of a programmer. Moreover, more modern operating systems will be explored, such as virtual operating systems.
Units: 1; Max Enrollment: 18; Prerequisites: CS 240 or permission of instructor.; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Every other year; Semesters Offered this Academic Year: Fall; Notes: Normally offered in alternate years.;

Course ID: CS342  Title: Computer Security and Privacy
An introduction to computer security and privacy. Topics will include privacy, threat modeling, software security, web tracking, web security, usable security, the design of secure and privacy preserving tools, authentication, anonymity, practical and theoretical aspects of cryptography, secure protocols, network security, social engineering, the relationship of the law to security and privacy, and the ethics of hacking. The course will emphasize hands-on experience with technical topics and the ability to communicate security and privacy topics to lay and expert audiences. Assignments will include technical exercises exploring security exploits and tools in a Linux environment; problem sets including exercises and proofs related to theoretical aspects of computer security; and opportunities to research, write, present, and lead discussions on security- and privacy-related topics.
Units: 1; Max Enrollment: 18; Prerequisites: CS 230 and CS 240 or permission of the instructor; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Spring; Semesters Offered this Academic Year: Not offered; Notes: Normally offered in alternate years; Not offered in 2020-2021

Course ID: CS343  Title: Distributed Computing
What is the “cloud”? What is a distributed system? This course is for students interested in understanding the fundamental concepts and algorithms underlying existing distributed systems. By the end of this course, students will have the basic knowledge needed to work with and build distributed systems, such as peer-to-peer systems and cloud computing systems. Topics include MapReduce, Spark, communication models, synchronization, distributed file systems, coordination algorithms, consensus algorithms, fault-tolerance, and security.
Units: 1; Max Enrollment: 18; Prerequisites: CS 230 (required); CS 231 and CS 242 (recommended).; Instructor: Staff; Distribution Requirements: MM - Mathematical Modeling and Problem Solving; Typical Periods Offered: Every other year; Semesters Offered this Academic Year: Not offered; Notes: Normally offered in alternate years; Not offered in 2020-2021

Course ID: CS350  Title: Research or Individual Study
Units: 1; Max Enrollment: 15; Prerequisites: Permission of the instructor. Open to juniors and seniors.; Typical Periods Offered: Spring; Fall; Semesters Offered this Academic Year: Fall; Spring; Notes: Mandatory credit/noncredit.;

Course ID: CS350H  Title: Research or Individual Study
Units: 0.5; Max Enrollment: 15; Prerequisites: Permission of the instructor.; Typical Periods Offered: Spring; Fall; Semesters Offered this Academic Year: Fall; Spring; Notes: Mandatory credit/noncredit.;

Course ID: CS360  Title: Senior Thesis Research
Units: 1; Max Enrollment: 15; Prerequisites: Permission of the department.; Typical Periods Offered: Spring; Fall; Semesters Offered this Academic Year: Spring; Fall; Notes: Students enroll in Senior Thesis Research (360) in the first semester and carry out independent work under the supervision of a faculty member. If sufficient progress is made, students may continue with Senior Thesis (370) in the second semester.;

Course ID: CS370  Title: Senior Thesis
Units: 1; Max Enrollment: 25; Prerequisites: CS 360 and permission of the department.; Typical Periods Offered: Spring; Fall; Semesters Offered this Academic Year: Fall; Spring; Notes: Students enroll in Senior Thesis Research (360) in the first semester and carry out independent work under the supervision of a faculty member. If sufficient progress is made, students may continue with Senior Thesis (370) in the second semester.;
